import re


LONGEST_KEY = 1
LEGAL = [
    None,
    "",
    "a",
    "ay",
    "aw",
    "ang",
    "an",
    "ag",
    "awyng",
    "awn",
    "ayg",
    "y",
    "w",
    "ng",
    "n",
    "g",
    "wyng",
    "wn",
    "yg",
    "wy",
    "aowy",
    "wyn",
    "owyn",
    "aon",
    "aown",
    "o",
    "oy",
    "ow",
    "on",
    "on",
    "og",
    "owyng",
    "own",
    "own",
    "oyg",
    "owy",
    "wg",
    "awg",
    "*n",
    "*g",
    "*Ga",
    "*Gay",
    "*Gaw",
    "*Gan",
    "*Gag",
    "*Gawn",
    "*Gayg",
    "*Gy",
    "*Gw",
    "*Gng",
    "*Gn",
    "*Gg",
    "*Gwn",
    "*Gyg",
    "*Gwy",
    "*Gaowy",
    "*Gwyg",
    "*Gowyn",
    "*Gawyg",
    "*Gao",
    "*Gaow",
    "*Gaong",
    "*Gaon",
    "*Gaog",
    "*Gaowyng",
    "*Gaown",
    "*Gaoyg",
    "*Go",
    "*Goy",
    "*Gow",
    "*Gog",
    "*Gown",
    "*Goyg",
    "*Gowy",
    "*Gaoy",
    "*Gawy",
    "*Gawy",
    "*Gyn",
    "*Gyn",
    "*Gwg",
    "*Goyn",
    "*Goyn",
    "*Gawg",
    "*GHa",
    "*GHay",
    "*GHaw",
    "*GHan",
    "*GHag",
    "*GHawn",
    "*GHayg",
    "*GHy",
    "*GHw",
    "*GHn",
    "*GHg",
    "*GHwyng",
    "*GHwn",
    "*GHwy",
    "*GHaowy",
    "*GHwyg",
    "*GHowyn",
    "*GHawyg",
    "*GHao",
    "*GHaow",
    "*GHaon",
    "*GHaog",
    "*GHaown",
    "*GHaoyg",
    "*GHo",
    "*GHoy",
    "*GHow",
    "*GHon",
    "*GHog",
    "*GHowyng",
    "*GHown",
    "*GHoyg",
    "*GHawy",
    "*GHawy",
    "*GHyn",
    "*GHyn",
    "*GHwg",
    "*GHoyn",
    "*GHoyn",
    "*GHawg",
    "*GHWa",
    "*GHWay",
    "*GHWaw",
    "*GHWan",
    "*GHWag",
    "*GHWawn",
    "*GHWayg",
    "*GHWy",
    "*GHWw",
    "*GHWng",
    "*GHWn",
    "*GHWg",
    "*GHWwn",
    "*GHWyg",
    "*GHWwy",
    "*GHWaowy",
    "*GHWwyg",
    "*GHWowyn",
    "*GHWawyg",
    "*GHWao",
    "*GHWaow",
    "*GHWaong",
    "*GHWaon",
    "*GHWaog",
    "*GHWaowyng",
    "*GHWaown",
    "*GHWaoyg",
    "*GHWo",
    "*GHWow",
    "*GHWon",
    "*GHWog",
    "*GHWoyg",
    "*GHWawy",
    "*GHWawy",
    "*GHWyn",
    "*GHWyn",
    "*GHWwg",
    "*GHWoyn",
    "*GHWoyn",
    "*GHWawg",
    "*GWa",
    "*GWay",
    "*GWang",
    "*GWan",
    "*GWawn",
    "*GWayg",
    "*GWy",
    "*GWw",
    "*GWn",
    "*GWg",
    "*GWwn",
    "*GWwy",
    "*GWaowy",
    "*GWwyn",
    "*GWwyg",
    "*GWowyn",
    "*GWawyg",
    "*GWao",
    "*GWaow",
    "*GWaong",
    "*GWaog",
    "*GWaown",
    "*GWaoyg",
    "*GWo",
    "*GWow",
    "*GWong",
    "*GWog",
    "*GWoyg",
    "*GWowy",
    "*GWaoy",
    "*GWaoy",
    "*GWawy",
    "*GWawy",
    "*GWyn",
    "*GWyn",
    "*GWwg",
    "*GWoyn",
    "*GWoyn",
    "*GWawg",
    "Da",
    "Day",
    "Dang",
    "Dan",
    "Dag",
    "Dawyng",
    "Dawn",
    "Dayg",
    "Dy",
    "Dw",
    "Dng",
    "Dn",
    "Dg",
    "Dwyng",
    "Dwn",
    "Dyg",
    "Dwy",
    "Daowy",
    "Daow",
    "Dwyg",
    "Dowyn",
    "Dawyg",
    "Dao",
    "Daow",
    "Daong",
    "Daon",
    "Daog",
    "Daowyng",
    "Daown",
    "Daoyg",
    "Do",
    "Doy",
    "Dow",
    "Don",
    "Dog",
    "Down",
    "Doyg",
    "Dowy",
    "Dowg",
    "Dowyg",
    "Dawy",
    "Don",
    "Down",
    "Dawy",
    "Dyn",
    "Dwg",
    "Doyn",
    "Dawg",
    "Dyn",
    "Doyn",
    "DHa",
    "DHay",
    "DHang",
    "DHan",
    "DHawyng",
    "DHawn",
    "DHy",
    "DHw",
    "DHng",
    "DHn",
    "DHg",
    "DHwyng",
    "DHaowy",
    "DHwyn",
    "DHwyg",
    "DHowyn",
    "DHawyg",
    "DHao",
    "DHaow",
    "DHaong",
    "DHaon",
    "DHaog",
    "DHaowyng",
    "DHaown",
    "DHaoyg",
    "DHo",
    "DHoy",
    "DHow",
    "DHon",
    "DHog",
    "DHowyng",
    "DHoyg",
    "DHowy",
    "DHawy",
    "DHon",
    "DHawy",
    "DHyn",
    "DHwg",
    "DHoyn",
    "DHawg",
    "DHyn",
    "DHoyn",
    "DHWa",
    "DHWay",
    "DHWaw",
    "DHWang",
    "DHWan",
    "DHWawyng",
    "DHWawn",
    "DHWy",
    "DHWw",
    "DHWng",
    "DHWn",
    "DHWg",
    "DHWwyng",
    "DHWwn",
    "DHWyg",
    "DHWwy",
    "DHWaowy",
    "DHWao",
    "DHWaow",
    "DHWaong",
    "DHWaon",
    "DHWaog",
    "DHWaowyng",
    "DHWaoyg",
    "DHWo",
    "DHWoy",
    "DHWow",
    "DHWog",
    "DHWown",
    "DHWoyg",
    "DHWowy",
    "DHWowg",
    "DHWawy",
    "DHWown",
    "DHWawy",
    "DHWyn",
    "DHWwg",
    "DHWawg",
    "DHWyn",
    "DWa",
    "DWay",
    "DWaw",
    "DWang",
    "DWan",
    "DWag",
    "DWawyng",
    "DWawn",
    "DWayg",
    "DWy",
    "DWw",
    "DWng",
    "DWn",
    "DWg",
    "DWwyng",
    "DWwn",
    "DWyg",
    "DWwy",
    "DWaowy",
    "DWaong",
    "DWwyg",
    "DWowyn",
    "DWawyg",
    "DWao",
    "DWaow",
    "DWaong",
    "DWaon",
    "DWaog",
    "DWaowyng",
    "DWaown",
    "DWaoyg",
    "DWo",
    "DWoy",
    "DWow",
    "DWon",
    "DWog",
    "DWown",
    "DWoyg",
    "DWowy",
    "DWowg",
    "DWowyg",
    "DWawy",
    "DWon",
    "DWown",
    "DWaoy",
    "DWawy",
    "DWyn",
    "DWwg",
    "DWoyn",
    "DWawg",
    "DWyn",
    "DWoyn",
    "Ga",
    "Gay",
    "Gaw",
    "Gang",
    "Gan",
    "Gag",
    "Gawyng",
    "Gawn",
    "Gayg",
    "Gy",
    "Gw",
    "Gng",
    "Gn",
    "Gg",
    "Gwyng",
    "Gwn",
    "Gwy",
    "Gaowy",
    "Gwyg",
    "Gaowyng",
    "Gowyn",
    "Gawyg",
    "Gaow",
    "Gaong",
    "Gaon",
    "Gaog",
    "Gaowyng",
    "Gaown",
    "Gaoyg",
    "Go",
    "Goy",
    "Gow",
    "Gon",
    "Gon",
    "Gog",
    "Gown",
    "Gown",
    "Goyg",
    "Gowy",
    "Gowg",
    "Gowyg",
    "Gawy",
    "Gaoy",
    "Gaoy",
    "Gawy",
    "Gawy",
    "Gyn",
    "Gyn",
    "Gwg",
    "Goyn",
    "Gawg",
    "Gyn",
    "Goyn",
    "GHa",
    "GHay",
    "GHaw",
    "GHan",
    "GHawn",
    "GHayg",
    "GHy",
    "GHw",
    "GHng",
    "GHn",
    "GHg",
    "GHwyng",
    "GHwn",
    "GHyg",
    "GHwy",
    "GHaowy",
    "GHwyn",
    "GHwyg",
    "GHowyn",
    "GHawyg",
    "GHao",
    "GHaow",
    "GHaong",
    "GHaon",
    "GHaog",
    "GHaowyng",
    "GHaown",
    "GHaoyg",
    "GHo",
    "GHoy",
    "GHong",
    "GHon",
    "GHog",
    "GHowyng",
    "GHown",
    "GHoyg",
    "GHowy",
    "GHowg",
    "GHowyg",
    "GHawy",
    "GHaoy",
    "GHaoy",
    "GHawy",
    "GHawy",
    "GHyn",
    "GHwg",
    "GHoyn",
    "GHoyn",
    "GHawg",
    "GHyn",
    "GHoyn",
    "a",
    "ay",
    "aw",
    "ang",
    "an",
    "ag",
    "awyng",
    "awn",
    "ayg",
    "y",
    "w",
    "ng",
    "n",
    "g",
    "wyng",
    "wn",
    "yg",
    "aown",
    "o",
    "oy",
    "ow",
    "on",
    "og",
    "oyg",
    "wg",
    "awg",
    "DGHWa",
    "DGHWay",
    "DGHWaw",
    "DGHWang",
    "DGHWan",
    "DGHWag",
    "DGHWawyng",
    "DGHWawn",
    "DGHWayg",
    "DGHWy",
    "DGHWw",
    "DGHWng",
    "DGHWn",
    "DGHWg",
    "DGHWwyng",
    "DGHWwn",
    "DGHWyg",
    "DGHWowyn",
    "DGHWaown",
    "DGHWo",
    "DGHWoy",
    "DGHWow",
    "DGHWon",
    "DGHWon",
    "DGHWog",
    "DGHWoyg",
    "DGHWwg",
    "DGHWawg",
    "Ha",
    "Hay",
    "Haw",
    "Hang",
    "Han",
    "Hag",
    "Hawyng",
    "Hawn",
    "Hayg",
    "Hy",
    "Hw",
    "Hng",
    "Hn",
    "Hg",
    "Hwyng",
    "Hwn",
    "Hyg",
    "Hwy",
    "Haowy",
    "Hwyg",
    "Howyn",
    "Hawyg",
    "Hao",
    "Haow",
    "Haong",
    "Haon",
    "Haog",
    "Haowyng",
    "Haown",
    "Haoyg",
    "Ho",
    "Hoy",
    "How",
    "Hon",
    "Hon",
    "Hog",
    "Howyng",
    "Hown",
    "Hown",
    "Hoyg",
    "Howy",
    "Howg",
    "Hawy",
    "Hawy",
    "Hyn",
    "Hwg",
    "Hoyn",
    "Hawg",
    "Hyn",
    "Hoyn",
    "*Hn",
    "*Hg",
    "GWa",
    "GWay",
    "GWan",
    "GWag",
    "GWawn",
    "GWayg",
    "GWy",
    "GWn",
    "GWg",
    "GWwn",
    "GWyg",
    "GWwy",
    "GWaowy",
    "GWowyn",
    "GWawyg",
    "GWaong",
    "GWaog",
    "GWaoyg",
    "GWo",
    "GWog",
    "GWoyg",
    "GWawy",
    "GWyn",
    "GWoyn",
    "GHWa",
    "GHWay",
    "GHWag",
    "GHWayg",
    "GHWy",
    "GHWn",
    "GHWg",
    "GHWowyn",
    "GHWaown",
    "GHWaoyg",
    "GHWo",
    "GHWog",
    "GHWoyg",
    "GHWawy",
    "GHWyn",
    "GHWoyn",
    "Wa",
    "Way",
    "Waw",
    "Wan",
    "Wag",
    "Wawn",
    "Wayg",
    "Wy",
    "Wn",
    "Wg",
    "Wwn",
    "Wwy",
    "Waowy",
    "Wwyn",
    "Wwyg",
    "Wowyn",
    "Waow",
    "Waong",
    "Waog",
    "Waowyng",
    "Waoyg",
    "Wo",
    "Wow",
    "Wong",
    "Won",
    "Wog",
    "Wown",
    "Woyg",
    "Wowyg",
    "Waoy",
    "Waoy",
    "Wawy",
    "Wawy",
    "Wyn",
    "Wyn",
    "Woyn",
    "Woyn",
    "Wawg",
    "DGa",
    "DGay",
    "DGaw",
    "DGang",
    "DGan",
    "DGag",
    "DGawyng",
    "DGawn",
    "DGayg",
    "DGy",
    "DGw",
    "DGng",
    "DGn",
    "DGg",
    "DGwyng",
    "DGwn",
    "DGyg",
    "DGwy",
    "DGaowy",
    "DGwyn",
    "DGwyg",
    "DGowyn",
    "DGawyg",
    "DGao",
    "DGaow",
    "DGaong",
    "DGaon",
    "DGaog",
    "DGaowyng",
    "DGaown",
    "DGaoyg",
    "DGo",
    "DGoy",
    "DGow",
    "DGon",
    "DGog",
    "DGowyng",
    "DGown",
    "DGoyg",
    "DGowy",
    "DGowg",
    "DGowyg",
    "DGawy",
    "DGon",
    "DGown",
    "DGaoy",
    "DGawy",
    "DGyn",
    "DGwg",
    "DGoyn",
    "DGawg",
    "DGaoy",
    "DGyn",
    "DGoyn",
    "DGHa",
    "DGHay",
    "DGHaw",
    "DGHang",
    "DGHan",
    "DGHag",
    "DGHawyng",
    "DGHawn",
    "DGHayg",
    "DGHy",
    "DGHw",
    "DGHng",
    "DGHn",
    "DGHg",
    "DGHwyng",
    "DGHwn",
    "DGHyg",
    "DGHwy",
    "DGHwyg",
    "DGHawyg",
    "DGHao",
    "DGHaow",
    "DGHaong",
    "DGHaon",
    "DGHaog",
    "DGHaowyng",
    "DGHaown",
    "DGHaoyg",
    "DGHo",
    "DGHoy",
    "DGHow",
    "DGHon",
    "DGHog",
    "DGHowyng",
    "DGHown",
    "DGHoyg",
    "DGHowy",
    "DGHowg",
    "DGHowyg",
    "DGHawy",
    "DGHon",
    "DGHown",
    "DGHaoy",
    "DGHawy",
    "DGHyn",
    "DGHyn",
    "DGHwg",
    "DGHoyn",
    "DGHawg",
    "DGHaoy",
    "DGHyn",
    "DGHoyn",
    "DGWa",
    "DGWay",
    "DGWaw",
    "DGWang",
    "DGWan",
    "DGWag",
    "DGWawyng",
    "DGWawn",
    "DGWayg",
    "DGWy",
    "DGWw",
    "DGWng",
    "DGWn",
    "DGWg",
    "DGWwyng",
    "DGWwn",
    "DGWyg",
    "DGWwy",
    "DGWaowy",
    "DGWwyn",
    "DGWwyg",
    "DGWowyn",
    "DGWawyg",
    "DGWao",
    "DGWaow",
    "DGWaong",
    "DGWaon",
    "DGWaog",
    "DGWaowyng",
    "DGWaown",
    "DGWaoyg",
    "DGWo",
    "DGWoy",
    "DGWow",
    "DGWon",
    "DGWog",
    "DGWowyng",
    "DGWown",
    "DGWoyg",
    "DGWowy",
    "DGWowg",
    "DGWowyg",
    "DGWawy",
    "DGWon",
    "DGWown",
    "DGWaoy",
    "DGWawy",
    "DGWyn",
    "DGWwg",
    "DGWoyn",
    "DGWawg",
    "DGWaoy",
    "DGWyn",
    "DGWoyn",
    "HWa",
    "HWay",
    "HWaw",
    "HWang",
    "HWag",
    "HWawyng",
    "HWayg",
    "HWy",
    "HWw",
    "HWng",
    "HWn",
    "HWwyng",
    "HWwn",
    "HWwy",
    "HWwyn",
    "HWwyg",
    "ao",
    "aow",
    "aong",
    "aon",
    "aog",
    "aowyng",
    "aown",
    "aoyg",
    "HWo",
    "HWow",
    "HWon",
    "HWowg",
    "HWowyg",
    "HWawy",
    "HWon",
    "HWaoy",
    "HWawy",
    "HWyn",
    "HWwg",
    "HWoyn",
    "HWawg",
    "HWaoy",
    "HWyn",
    "HWoyn",
]
SYLLABIC = {"*n": "m", "*g": "ng", "*Hn": "hm", "*Hg": "hng"}
INITIALS = {
    "": "",
    "*G": "b",
    "*GH": "p",
    "*GHW": "m",
    "*GW": "f",
    "D": "d",
    "DH": "t",
    "DHW": "n",
    "DW": "l",
    "G": "g",
    "GH": "k",
    "DGHW": "ng",
    "H": "h",
    "GW": "gw",
    "GHW": "kw",
    "W": "w",
    "DG": "z",
    "DGH": "c",
    "DGW": "s",
    "HW": "j",
}
RIMES = {
    "*n": "m",
    "*g": "ng",
    "a": "aa",
    "ay": "aai",
    "aw": "aau",
    "ang": "aam",
    "an": "aan",
    "ag": "ang",
    "awyng": "aap",
    "awn": "aat",
    "ayg": "aak",
    "y": "ai",
    "w": "au",
    "ng": "am",
    "n": "an",
    "g": "ang",
    "wyng": "ap",
    "wn": "at",
    "yg": "ak",
    "wy": "e",
    "aowy": "ei",
    "wyn": "en",
    "wyg": "eng",
    "owyn": "et",
    "awyg": "ek",
    "ao": "i",
    "aow": "iu",
    "aong": "im",
    "aon": "in",
    "aog": "ing",
    "aowyng": "ip",
    "aown": "it",
    "aoyg": "ik",
    "o": "o",
    "oy": "oi",
    "ow": "ou",
    "ong": "om",
    "on": "on",
    "og": "ong",
    "owyng": "op",
    "own": "ot",
    "oyg": "ok",
    "owy": "oe",
    "owg": "oeng",
    "owyg": "oek",
    "aoy": "u",
    "awy": "ui",
    "yn": "un",
    "wg": "ung",
    "oyn": "ut",
    "awg": "uk",
}


# [Unused] Merge rimes in dictionary to match MaaJik mergers
def merge_rimes(rime):
    mapping = {
        "a": "aa",
        "eu": "iu",
        "em": "im",
        "ep": "ip",
        "oem": "im",
        "oet": "et",
    }
    if rime in mapping:
        return mapping(rime)
    else:
        return rime


# Unmerge rhymes in converted Jyutping from stroke to match dictionary
def correct_syllable(syl):
    exceptions = {"ten": "toen", "fim": "foem"}
    # Exceptions
    if syl in exceptions:
        return exceptions(syl)
    # Add j in front of i
    if re.match(r"^i", syl):
        return re.sub(r"i", r"ji", syl)
    # Add w in front of u
    if re.match(r"u[int]?", syl):
        return re.sub(r"u", r"wu", syl)
    # on/ot -> eon/eot
    if re.match(r"[dtnlzcsj]o[nt]", syl):
        return re.sub(r"o", r"eo", syl)
    # u -> yu
    if re.match(r"[zcsj]u", syl):
        return re.sub(r"u", r"yu", syl)
    # ui -> eoi
    if re.match(r"[dtnlgkzcsj]ui", syl):
        return re.sub(r"ui", r"eoi", syl)
    # un/ut -> yun/yut
    if re.match(r"[dtnlgkzcsj]u[nt]", syl):
        return re.sub(r"u", r"yu", syl)
    # gwu/kwu -> gu/ku
    if re.match(r"[gk]wu[int]", syl):
        return re.sub(r"wu", r"u", syl)
    return syl


# Convert one half of the stroke to Jyutping
def half2jp(half):
    if half is None:
        return ""
    if half in SYLLABIC:
        return SYLLABIC[half]

    init_rime = re.search(r"([*DGHW]*)([aowyng]*)", half)
    initial = init_rime.group(1)
    rime = init_rime.group(2)

    if initial not in INITIALS or rime not in RIMES:
        return None

    jyutping = f"{INITIALS[initial]}{RIMES[rime]}"
    return jyutping


# Convert a single stroke to Jyutping
def convert(stroke):
    left_right = re.search(r"([*DGHWaowyng]+)?(-([*DGHWaowyng]+))?", stroke)
    left = left_right.group(1)
    right = left_right.group(3)

    left_jp = half2jp(left)
    right_jp = half2jp(right)

    if left_jp is None or right_jp is None:
        return None

    left_jp = correct_syllable(left_jp)
    right_jp = correct_syllable(right_jp)

    jyutping = f"{left_jp} {right_jp}".strip()
    return jyutping


# Lookup function: return the translation for <key> (a tuple of strokes)
# or raise KeyError if no translation is available/possible.
def lookup(outline):
    assert len(outline) <= LONGEST_KEY
    stroke = outline[0]
    jyutping = convert(stroke)
    if jyutping is None:
        raise KeyError
    return jyutping


# Optional: return an array of stroke tuples that would translate back
# to <text> (an empty array if not possible).
def reverse_lookup(text):
    return []
